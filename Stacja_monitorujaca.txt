#include <DataCoder.h>                 //biblioteka kodowania
#include <VirtualWire.h>               //biblioteka komunikacji radiowej
#include <Wire.h>                      //biblioteka I2C
#include <LCD.h>                       //biblioteka wyswietlacza LCD
#include <LiquidCrystal_I2C.h>         //interfejs I2C do wyswietlacza


LiquidCrystal_I2C  lcd(0x27,2,1,0,4,5,6,7);

  int dane[11]={0,0,0,0,0,0,0,0,0,0,0}; 
  
 
 
void setup() 
{
  Serial.begin(9600);
  vw_set_rx_pin(3);
  vw_setup(2000);
  vw_rx_start();
  
 pinMode(13, OUTPUT);


  lcd.begin (16,2); 
  lcd.setBacklightPin(3,POSITIVE);
  lcd.setBacklight(HIGH);
}
 
void loop() 
{
  delay(100);
  uint8_t buf[VW_MAX_MESSAGE_LEN];
  uint8_t buflen = VW_MAX_MESSAGE_LEN;

  union RFData wiadomosc;
  
float wiadomosc1[RF_DATA_ARRAY_SIZE];
  if (vw_get_message(buf, &buflen)) 
    {
        digitalWrite(13, HIGH); 
        Serial.println("DANE: ");
  
         for (int i =0; i < buflen; i++)
             {
              wiadomosc.s[i]=buf[i];
             }
              
         
        digitalWrite(13, LOW);
     DecodeRFData(wiadomosc1, wiadomosc);
     
     
    }
    byte x=wiadomosc1[0];

         dane[0]= bitRead(x,0);  //Uzbrojenie
         dane[1]= bitRead(x,1);  //czy jest opadanie
         dane[2]= bitRead(x,2);  //czy nastapil spadek wysokosci
         dane[3]= bitRead(x,3);  //czy wybil timer
         dane[4]= bitRead(x,4);  //czy akcelerometr dobrze pokazuje
         dane[5]= bitRead(x,5);  //blad podlaczenia akc
         dane[6]= bitRead(x,6);  //blad barometru
         dane[7]= bitRead(x,7);  //blad karty SD
         dane[8]= wiadomosc1[1];  //wysokosc
         dane[9]= wiadomosc1[2];  //temperatura
         dane[10]= dane[5]+dane[6]+dane[7];  // ilosc bledow podlaczen
Serial.print(dane[0]);
Serial.print(dane[1]);
Serial.print(dane[2]);
Serial.print(dane[3]);
Serial.print(dane[4]);
Serial.print(dane[5]);
Serial.print(dane[6]);
Serial.print(dane[7]);
Serial.print(dane[8]);
Serial.print(dane[9]);
Serial.println(dane[10]);

 
   lcd.home (); 
   lcd.print("SYT");                              // sytuacja
   lcd.setCursor (4,0);
   lcd.print("A");                                //akcelerometr
   lcd.setCursor (6,0);
   lcd.print("WYS");                              // wysokosc
   lcd.setCursor (10,0);
   lcd.print("T");                                // temperatura
   lcd.setCursor (13,0);
   lcd.print("!");                                // bledy
   lcd.setCursor (15,0);
   lcd.print("^");                                // uzbrojenie

   lcd.setCursor (0,1);
    lcd.print(dane[1]);
    lcd.setCursor (1,1);
    lcd.print(dane[2]);
    lcd.setCursor (2,1);
    lcd.print(dane[3]);
    lcd.setCursor (4,1);
    lcd.print(dane[4]);
    lcd.setCursor (6,1);
    lcd.print(dane[8]);
    lcd.setCursor (10,1);
    lcd.print(dane[9]);
    lcd.setCursor (13,1);
    lcd.print(dane[10]);
    lcd.setCursor (15,1);
    lcd.print(dane[0]);

  
}